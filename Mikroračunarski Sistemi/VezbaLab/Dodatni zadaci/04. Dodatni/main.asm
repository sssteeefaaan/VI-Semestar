CODE    SEGMENT PUBLIC 'CODE'
        ASSUME CS:CODE
START:
	;PROTEUS PATCH
        IN AX, 00H
	OUT 00H, AX
	
	 ;8255 CONFIG
	MOV AL, CW
	OUT PORT_CONF, AL
ENDLESS:

   LOCKING:; OVO JE POSTAVLJENO KAKO PRITISKANJE TASTERA JEDNOM NE BI NAPUNILO BUFFER, TAKOÐE FREKVENCIJA PODESENA NA 100KHZ
      IN AL, PORTC
      AND AL, 0FH
      CMP AL, 0FH
   JNZ  REFRESH ; IZ PETLJE SE IZLAZI KAD SU SVE LINIJE NA PORTU C KOMPONENTE 8255 NA JEDINICI, ODNOSNO NIJEDAN TASTER NIJE PRITISNUT
   
   ; PETLJA KOJA OCITAVA PROMENU NA TASTATURI
   MOV CX, 8H
   MOV AL, 07FH
   PETLJA:
      OUT PORTB, AL; OSLOBADJA PO JEDNU NULU NA LINIJAMA PORTA B, UKOLIKO TASTER PRESPOJI OVO I JAVI SE SIGNAL NA NEKOJ OD LINIJA PORTA C,
      ; ONDA ZNAMO DA JE PRITISNUT TASTER
      MOV AH, AL; AH MI CUVA KOLONU TASTERA
      
      IN AL, PORTC; AL MI CUVA VRSTU TASTERA
      AND AL, 0FH
      
      CMP AL, 0FH
      JNE PRITISNUT_TASTER
      
      MOV AL, AH
      ROR AL, 1H ;SELEKTUJU SE SLEDECE DVE KOLONE
   LOOP PETLJA
   
   REFRESH:  ;OSVEZAVANJE DISPLEJA 
      MOV BL, INDIKATOR; INDIKATOR PREDSTAVLJA KOJI JE NA REDU DISPLEJ ZA OSVEZAVANJE
      MOV AH, BL
      XOR BH, BH
      
      MOV CL, 4H; S OBZIROM DA MI JE VISI DEO PROTA C IZLAZNI, POTREBNO JE DA SE SHIFTUJU VREDNOSTI ZA POLUBAJT
      MOV AL, AH
      SHL AL, CL
      OUT PORTC, AL; SIGNALIZIRA SE KOJI DISPLEJ TREBA IZABRATI
      ; DEKODEROM 3X8
      
      MOV AL, TRENUTNE[BX]
      MOV BL, AL
      MOV AL, CIFRE[BX]
      OUT PORTA, AL; NA PORT A SE SIGNALIZIRA VREDNOST KOJA TREBA BITI ISPISANA NA JEDNOM OD DISPLEJA

      INC AH; BIRA SE SLEDECI DISPLEJ (PO MODULU 8)
      CMP AH, 8H
      JL REF_DALJE
      
      XOR AH, AH
      
      REF_DALJE:
      MOV INDIKATOR, AH
      
JMP ENDLESS
; OVO BI TREBALO DA SU PROCEDURE, ALI NE UMEM DA NAMESTIM DEBUGGER U POROTEUSUS DA RADI ISPRAVNO KAD NAPISEM PROCEDURE
; PA SAM SE PRETVARAO DA IH POZIVAM XD
;------------------------------------
PRITISNUT_TASTER:; AH - KOLONA, AL - VRSTA TASTERA U MATRICI TASTERA
      CMP AL, 0EH
      JE KLIKNUT_0_7
      
      CMP AL, 0DH
      JE KLIKNUT_8_15
      
      JMP PT_KRAJ

	 KLIKNUT_0_7:
	    MOV DL, CL
	    SUB DL, 1H
	    XOR DH, DH
	    JMP UNETA_CIFRA; POZIV PROCEDURE, ODNOSNO SKOK NA LABELU, GDE MI DX CUVA VREDNOST KOJA TREBA DA SE UPISE
	       
	 KLIKNUT_8_15:
	    CMP CL, 2H
	    JG SPECIAL
		  
	    MOV DL, CL
	    ADD DL, 7H
	    XOR DH, DH
	    JMP UNETA_CIFRA; POZIV PROCEDURE, ODNOSNO SKOK NA LABELU, GDE MI DX CUVA VREDNOST KOJA TREBA DA SE UPISE
      JMP PT_KRAJ
      
	 SPECIAL:; OVO JE DEO ZA SPECIJALNE DIRKE +, =, BACK
	    MOV AX, PT_KRAJ
	    MOV CALLBACK, AX; CUVAM POVRATAK, OPET OVO JE TREBALO PROCEDURAMA DA SE RADI
	    
	    CMP CL, 3H
	    JE PLUS
	    
	    CMP CL, 4H
	    JE JEDNAKO
	    
	    CMP CL, 5H
	    JE BACK	
      PT_KRAJ:
JMP REFRESH
;-------------------------------------
UNETA_CIFRA:; DX CUVA VREDNOST KOJA TREBA DA SE UPISE
   CMP CLR_DISP, 1H; ISPITIVANJE DA LI TREBA DA SE RESETUJE DISPLEJ PRI UNOSU
   JNE NE_CISTI
   
   MOV CL, UNESENE
   MOV UNESENE, 0H; RESETUJE SE BROJ UNESENIH CIFARA
   MOV CLR_DISP, 0H
   
   XOR CH, CH
   XOR SI, SI
   
   OCISTI:
      MOV TRENUTNE[SI], 0H
      INC SI
   LOOP OCISTI
   
   NE_CISTI:
   MOV BL, UNESENE; UNESENE JE BROJ UNETIH CIFARA
   
   CMP BL, 0H; OVO JE ISPITIVANJE DA LI JE NULA ZA INDEKS I VREDNOST I UKOLIKO JESTE, ONDA SE ONA NE DODAJE
   JNE UC_DALJE
   
   CMP DL, 0H
   JE C_STUCK
   
   UC_DALJE:
   CMP BL, 8H; ISPITIVANJE DA LI SE NAPUNIO DISPLEJ
   JE C_STUCK
  
   XOR BH, BH; UPISIVANJE CIFRE I UJEDNO SIFTOVANJE ULEVO UNETIH CIFARA
      C_LOOP:
	 CMP BX, 0H
	 JZ C_DALJE
	 DEC BX
	 MOV AL, TRENUTNE[BX]
	 INC BX
	 MOV TRENUTNE[BX], AL
	 DEC BX
      JMP C_LOOP
   
   C_DALJE:
      MOV TRENUTNE[BX], DL
      INC UNESENE
   C_STUCK:
JMP REFRESH
;-------------------------------------
PLUS:; "PROCEDURA" KOJA SABIRA SADRZAJ DISPLEJA SA AKUMULATOROM I REZULTAT SMESTA U AKUMULATOR, TAKODJE POSTAVLJA FLEG ZA BRISANJE
   XOR AH, AH
   XOR SI, SI
   MOV CX, 8H
   
   PLUS_PETLJA:
      MOV AL, TRENUTNE[SI]
      ADD AL, ZBIR[SI]
      ADD AL, AH
      XOR AH, AH
      
      CMP AL, 0AH
      JL P_NEMA_PRENOS
      
      P_IMA_PRENOS:
	 MOV AH, 1H
	 SUB AL, 0AH
      
      P_NEMA_PRENOS:
	 MOV ZBIR[SI], AL
	 MOV TRENUTNE[SI], AL
	 INC SI
   LOOP PLUS_PETLJA
   
   CMP AH, 1
   JNE P_KRAJ
      MOV CX, 8H
      XOR SI, SI
      P_ERROR:
	 MOV AL, ERROR[SI]
	 MOV TRENUTNE[SI], AL
	 MOV ZBIR[SI], 0
	 INC SI
      LOOP P_ERROR
   
   P_KRAJ:
   
   MOV CLR_DISP, 1H; POSTAVLJANJE FLEGA ZA BRISANJE DISPLEJA
   MOV AX, CALLBACK
JMP AX
;------------------------------------------
JEDNAKO:; IMA SLICNU FUNKCIONALNOST KAO I PLUS, S TIM ŠTO AKUMULATOR ZBIRA PRAZNI
   XOR AH, AH
   XOR BX, BX
   MOV CX, 8H
   
   J_PETLJA:
      MOV AL, TRENUTNE[BX]
      ADD AL, ZBIR[BX]
      ADD AL, AH
      XOR AH, AH
      
      CMP AL, 0AH
      JL J_NPRENOS
      
      J_PRENOS:
	 MOV AH, 1H
	 SUB AL, 0AH
      
      J_NPRENOS:
	 MOV ZBIR[BX], 0H
	 MOV TRENUTNE[BX], AL
	 INC BX
   LOOP J_PETLJA
   
   CMP AH, 1H
   JNE J_KRAJ
   
      MOV CX, 8H
      XOR SI, SI
      J_ERROR:
	 MOV AL, ERROR[SI]
	 MOV TRENUTNE[SI], AL
	 MOV ZBIR[SI], 0
	 INC SI
      LOOP J_ERROR
   
 J_KRAJ:
   MOV CLR_DISP, 1H; SETOVANJE FLEGA ZA BRISANJE
   MOV AX, CALLBACK
JMP AX
;-------------------------------------------
BACK:; BRISANJE POSLEDNJEG UNETOG BROJA
   XOR SI, SI
   MOV DI, 1H
  
   CMP CLR_DISP, 0; PREVENCIJA BRISANJA UKOLIKO JE VEC SETOVAN CLEAR DISP FLAG
   JNZ B_DALJE
   
   MOV CL, UNESENE
   CMP CL, 0H; PREVENCIJA BRISANJA PRAZNOG DISPLEJA
   JZ B_DALJE
   
   XOR CH, CH
   B_PETLJA:
      MOV AL, TRENUTNE[DI]
      MOV TRENUTNE[SI], AL
      INC SI
      INC DI
   LOOP B_PETLJA
   
   MOV TRENUTNE[DI], 0H
   DEC UNESENE
   
   B_DALJE:
   MOV AX, CALLBACK
JMP AX
;-------------------------------------------------------
;DATA SEGMENT
   PORTA EQU 0F0H
   PORTB EQU 0F2H
   PORTC EQU 0F4H
   PORT_CONF EQU 0F6H
   
   CW	EQU 81H
   
   TRENUTNE DB 8D DUP (0H); NIZ VREDNOSTI KOJE SE ISPISUJU NA DISPELJU
   ZBIR DB 8D DUP (0H); NIZ VREDNOSTI KOJE SE AKUMULIRAJU
   ERROR DB 0FFH, 0FFH, 86H, 88H, 88H, 0C0H, 88H, 0FFH 
   UNESENE DB 0D; BROJ UNESENIH CIFARA
   
   INDIKATOR DB 0H; PREDSTAVLJA KOJI DISPLEJ JE SLEDECI NA REDU ZA OSVEZAVANJE
   CALLBACK DW 0H; NE RADI MI PROCEDURE I DEBUGGER I ONDA SAM SVE RADIO U CS
   CLR_DISP DB 0H; FLEG ZA BRISANJE DISPLEJA
   
   CIFRE DB 0C0H
	DB 0F9H
	DB 0A4H
	DB 0B0H
	DB 99H
	DB 92H
	DB 82H
	DB 0F8H
	DB 80H
	DB 90H
;DATA ENDS
CODE    ENDS
        END START